/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.patientWorkArea;

import business.Ecosystem;
import business.enterprise.Enterprise;
import business.organization.PatientOrganization;
import business.userAcoount.UserAccount;
import javax.swing.JPanel;
import business.organization.Organization;
import business.workqueue.ScheduleAppointmentWorkRequest;
import business.workqueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bharat
 */
public class PatientWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private Ecosystem business;
    private UserAccount userAccount;
    private PatientOrganization patientOrganization;
    Enterprise enterprise;

    public PatientWorkAreaJPanel(JPanel userProcessContainer, Ecosystem business, UserAccount userAccount, Organization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.business = business;
        this.patientOrganization = (PatientOrganization) organization;
        this.enterprise = enterprise;
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) patientsRequestsJTable.getModel();
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[2] = request.getStatus();
            String result = ((ScheduleAppointmentWorkRequest) request).getAppointmentResolution();
            row[3] = result;
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        scheduleAppointmentJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientsRequestsJTable = new javax.swing.JTable();
        scheduledAppointmentsJlbl = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(0, 102, 102));
        jLabel1.setFont(new java.awt.Font("Levenim MT", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 204));
        jLabel1.setText("   Patient Work Area");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 26, 358, -1));

        scheduleAppointmentJButton.setFont(new java.awt.Font("Levenim MT", 0, 11)); // NOI18N
        scheduleAppointmentJButton.setText("Schedule a new Appointment");
        scheduleAppointmentJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleAppointmentJButtonActionPerformed(evt);
            }
        });
        add(scheduleAppointmentJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 428, -1, -1));

        patientsRequestsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Purpose", "Doctor", "Status", "Resolution Prescribed"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(patientsRequestsJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 154, 629, 256));

        scheduledAppointmentsJlbl.setText("Your Scheduled Appointments:");
        add(scheduledAppointmentsJlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 122, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void scheduleAppointmentJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleAppointmentJButtonActionPerformed
        // TODO add your handling code here:
        ScheduleAppointmentJPanel scheduleAppointmentJPanel = new ScheduleAppointmentJPanel(userProcessContainer, business, userAccount, patientOrganization, enterprise);
        userProcessContainer.add("ScheduleAppointmentJPanel", scheduleAppointmentJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_scheduleAppointmentJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientsRequestsJTable;
    private javax.swing.JButton scheduleAppointmentJButton;
    private javax.swing.JLabel scheduledAppointmentsJlbl;
    // End of variables declaration//GEN-END:variables
}
