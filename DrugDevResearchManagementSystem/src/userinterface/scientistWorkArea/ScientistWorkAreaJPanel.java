/*
 * AdminWorkAreaJPanel.java
 *
 * Created on October 10, 2008, 8:50 AM
 */
package userinterface.scientistWorkArea;

import business.Ecosystem;
import business.drug.Drug;
import business.enterprise.Enterprise;
import business.network.Network;
import business.organization.Organization;
import business.organization.ScientistOrganization;
import business.scientist.Scientist;
import business.userAcoount.UserAccount;
import business.workqueue.StudyWorkRequest;
import business.workqueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ujjval
 */
public class ScientistWorkAreaJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Enterprise enterprise;
    Ecosystem business;
    UserAccount account;
    Organization org;
    private ScientistOrganization scientistOrganization;

    /**
     * Creates new form AdminWorkAreaJPanel
     */
    public ScientistWorkAreaJPanel(JPanel userProcessContainer, Enterprise enterprise, Ecosystem business, UserAccount account, Organization org) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.business = business;
        this.account = account;
        this.org = org;
        scientistOrganization = (ScientistOrganization) org;
        valueLabel.setText(enterprise.getName());
        populateTable();
        populateDrugTable();
        populateNetworkStudyJTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) scientistWorkRequestJTable.getModel();
        model.setRowCount(0);
        System.out.println("userinterface.scientistWorkArea.ScientistWorkAreaJPanel.populateTable()"+ scientistOrganization.getWorkQueue().getWorkRequestList());
        for (WorkRequest request : scientistOrganization.getWorkQueue().getWorkRequestList()) {
            System.out.println("userinterface.scientistWorkArea.ScientistWorkAreaJPanel.populateTable()"+request);
            Object[] row = new Object[7];
            row[0] = request.getSender().getEmployee().getName();
            row[1] = request;
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[3] = request.getStatus();
            row[4] = ((StudyWorkRequest) request).getStudy().getRecruitmentStatus();
            row[5] = ((StudyWorkRequest) request).getDrug() == null ? "Yet to be Decided" : ((StudyWorkRequest) request).getDrug();
            row[6] = ((StudyWorkRequest) request).getStudy().getPhase() == null ? "New Study" : ((StudyWorkRequest) request).getStudy().getPhase();
            model.addRow(row);
        }
    }

    public void populateDrugTable() {

        DefaultTableModel model = (DefaultTableModel) drugJTable.getModel();
        model.setRowCount(0);

        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (o instanceof ScientistOrganization) {
                for (Scientist s : o.getScientistDirectory().getScientistDirectory()) {
                    if (account.getEmployee().getName().equals(s.getName())) {
                        for (Drug d : s.getDrugList()) {
                            Object row[] = new Object[3];
                            row[0] = d.getDrugNumber();
                            row[1] = d;
                            row[2] = d.getClinicalTrialStatus();
                            model.addRow(row);
                        }
                    }
                }
            }
        }
    }

    public void populateNetworkStudyJTable() {
        DefaultTableModel model = (DefaultTableModel) networkStudyJTable.getModel();
        model.setRowCount(0);

        for (Network n : business.getNetworkList()) {
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                    if (o instanceof ScientistOrganization) {
                        for (WorkRequest req : o.getWorkQueue().getWorkRequestList()) {
                            if (req.getStatus().equalsIgnoreCase("Completed")) {
                                Object[] row = new Object[4];
                                row[0] = ((StudyWorkRequest) req);
                                row[1] = req.getStatus();
                                row[2] = ((StudyWorkRequest) req).getDrug();
                                row[3] = n.getName();
                                model.addRow(row);

                            }

                        }
                    }
                }
            }

        }

    }


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerJlbl = new javax.swing.JLabel();
        manageOrganizationJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        viewDrugjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        scientistWorkRequestJTable = new javax.swing.JTable();
        assignToMeJBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        drugJTable = new javax.swing.JTable();
        startTrialJBtn = new javax.swing.JButton();
        assignDrugJBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        networkStudyJTable = new javax.swing.JTable();
        headerJlbl1 = new javax.swing.JLabel();
        detailsJBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerJlbl.setFont(new java.awt.Font("Levenim MT", 1, 24)); // NOI18N
        headerJlbl.setForeground(new java.awt.Color(0, 204, 204));
        headerJlbl.setText("View Completed Studies:");
        add(headerJlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, 380, -1));

        manageOrganizationJButton.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        manageOrganizationJButton.setText("Create Drug");
        manageOrganizationJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageOrganizationJButtonActionPerformed(evt);
            }
        });
        add(manageOrganizationJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, 150, -1));

        enterpriseLabel.setFont(new java.awt.Font("Levenim MT", 1, 18)); // NOI18N
        enterpriseLabel.setForeground(new java.awt.Color(0, 204, 204));
        enterpriseLabel.setText("Enterprise :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 120, 30));

        valueLabel.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        valueLabel.setForeground(new java.awt.Color(0, 204, 204));
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 130, -1));

        viewDrugjButton.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        viewDrugjButton.setText("View Drug");
        viewDrugjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDrugjButtonActionPerformed(evt);
            }
        });
        add(viewDrugjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, 150, -1));

        scientistWorkRequestJTable.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        scientistWorkRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doc Name", "Message", "Reciever", "Study Status", "Recruitment Status", "DrugName", "Study Phase"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(scientistWorkRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 600, 120));

        assignToMeJBtn.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        assignToMeJBtn.setText("Assign to me");
        assignToMeJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignToMeJBtnActionPerformed(evt);
            }
        });
        add(assignToMeJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 160, -1));

        drugJTable.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        drugJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DrugName", "Clinical Trial Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(drugJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 610, 90));

        startTrialJBtn.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        startTrialJBtn.setText("Start Trials");
        startTrialJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startTrialJBtnActionPerformed(evt);
            }
        });
        add(startTrialJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 150, 30));

        assignDrugJBtn.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        assignDrugJBtn.setText("Assign Drug");
        assignDrugJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignDrugJBtnActionPerformed(evt);
            }
        });
        add(assignDrugJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 210, -1, -1));

        networkStudyJTable.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        networkStudyJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Study Name", "Status", "Drug Name", "Network"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(networkStudyJTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 600, 150));

        headerJlbl1.setFont(new java.awt.Font("Levenim MT", 1, 24)); // NOI18N
        headerJlbl1.setForeground(new java.awt.Color(0, 204, 204));
        headerJlbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerJlbl1.setText("Scientist Work Area");
        add(headerJlbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 290, -1));

        detailsJBtn.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        detailsJBtn.setText("Details");
        detailsJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailsJBtnActionPerformed(evt);
            }
        });
        add(detailsJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 610, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void manageOrganizationJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageOrganizationJButtonActionPerformed

        SelectCompoundsJPanel scjp = new SelectCompoundsJPanel(userProcessContainer, enterprise, business, account, org);
        userProcessContainer.add("SelectCompoundsJPanel", scjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);


    }//GEN-LAST:event_manageOrganizationJButtonActionPerformed

    private void viewDrugjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDrugjButtonActionPerformed
        // TODO add your handling code here:
        ViewDrugJPanel vdjp = new ViewDrugJPanel(userProcessContainer, enterprise, business, account, org);
        userProcessContainer.add("ViewDrugJPanel", vdjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);


    }//GEN-LAST:event_viewDrugjButtonActionPerformed

    private void assignToMeJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignToMeJBtnActionPerformed
        // TODO add your handling code here:

        int selectedRow = scientistWorkRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row!");
            return;
        }
        WorkRequest request = (WorkRequest) scientistWorkRequestJTable.getValueAt(selectedRow, 1);
        
        request.setReceiver(account);
        request.setStatus("Pending");
        populateTable();


    }//GEN-LAST:event_assignToMeJBtnActionPerformed

    private void startTrialJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startTrialJBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = drugJTable.getSelectedRow();
        int selRow = scientistWorkRequestJTable.getSelectedRow();
        if (selectedRow < 0 || selRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select both Study and its corresponding drug!!");
            return;
        } else {
            Drug drug = (Drug) drugJTable.getValueAt(selectedRow, 1);
            StudyWorkRequest req = (StudyWorkRequest) scientistWorkRequestJTable.getValueAt(selRow, 1);
            
            if (req.getStatus().equals("Completed")) {
                JOptionPane.showMessageDialog(this, "Study Completed!!");
                return;
            } else if (drug.getClinicalTrialStatus().equals("Trial Passed")) {
                JOptionPane.showMessageDialog(this, "Clinical Trials Completed!!");
                return;
            } else {
                
                if (req.getStudy().getPhase().equalsIgnoreCase("New Study")) {
                    
                    req.getStudy().setPhase("Phase 1");
                } else if (req.getStudy().getPhase().equalsIgnoreCase("Phase 1") && drug.getClinicalTrialStatus().equals("Trial Failed")) {
                    
                    req.getStudy().setPhase("Phase 2");
                }
                StartTrialsJPanel stjp = new StartTrialsJPanel(userProcessContainer, enterprise, business, account, org, drug, req);
                userProcessContainer.add("StartTrialsJPanel", stjp);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }

        }

    }//GEN-LAST:event_startTrialJBtnActionPerformed

    private void assignDrugJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignDrugJBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = drugJTable.getSelectedRow();
        int selRow = scientistWorkRequestJTable.getSelectedRow();
        if (selectedRow < 0 || selRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select both Study and its corresponding drug!!");
            return;
        } else if (!(((Drug) drugJTable.getValueAt(selectedRow, 1)).getClinicalTrialStatus().equals("Trial Passed"))) {
            JOptionPane.showMessageDialog(this, "Selected a drug's clinicial trial is not completed!");
            return;
        } else {
            Drug drug = ((Drug) drugJTable.getValueAt(selectedRow, 1));
            StudyWorkRequest req = (StudyWorkRequest) scientistWorkRequestJTable.getValueAt(selRow, 1);
            req.setDrug(drug);
            req.setStatus("Completed");
            populateTable();
            populateDrugTable();
        }
    }//GEN-LAST:event_assignDrugJBtnActionPerformed

    private void detailsJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailsJBtnActionPerformed
        // TODO add your handling code here:

        int selectedRow = networkStudyJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row!!");
            return;
        } else {

            
            StudyWorkRequest req1 = (StudyWorkRequest) networkStudyJTable.getValueAt(selectedRow, 0);
            ViewResultJPanel vrjp = new ViewResultJPanel(userProcessContainer, enterprise, business, account, org, req1);
            userProcessContainer.add("ViewResultJPanel", vrjp);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }


    }//GEN-LAST:event_detailsJBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignDrugJBtn;
    private javax.swing.JButton assignToMeJBtn;
    private javax.swing.JButton detailsJBtn;
    private javax.swing.JTable drugJTable;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel headerJlbl;
    private javax.swing.JLabel headerJlbl1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton manageOrganizationJButton;
    private javax.swing.JTable networkStudyJTable;
    private javax.swing.JTable scientistWorkRequestJTable;
    private javax.swing.JButton startTrialJBtn;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JButton viewDrugjButton;
    // End of variables declaration//GEN-END:variables

}
