/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.doctorWorkArea;

import business.Ecosystem;
import business.organization.DoctorOrganization;
import business.organization.Organization;
import business.userAcoount.UserAccount;
import business.workqueue.ScheduleAppointmentWorkRequest;
import business.workqueue.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ujjval
 */
public class TreatPatientsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form TreatPatientsJPanel
     */
    private JPanel userProcessContainer;
    private Ecosystem business;
    private UserAccount userAccount;
    private DoctorOrganization doctorOrganization;

    public TreatPatientsJPanel(JPanel userProcessContainer, Ecosystem business, UserAccount userAccount, Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.business = business;
        this.doctorOrganization = (DoctorOrganization) organization;
        
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) doctorWorkRequestJTable.getModel();
        model.setRowCount(0);
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        for (WorkRequest request : doctorOrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[5];
            row[0] = request.getSender().getEmployee().getName();
            row[1] = request;
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[3] = request.getStatus();
            row[4] = ((ScheduleAppointmentWorkRequest) request).getAppointmentDate() == null ? "New" : dateFormat.format((((ScheduleAppointmentWorkRequest) request).getAppointmentDate()));
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        doctorWorkRequestJTable = new javax.swing.JTable();
        refreshJBtn = new javax.swing.JButton();
        assignJBtn = new javax.swing.JButton();
        treatPatientJBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        headerJlbl = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        doctorWorkRequestJTable.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        doctorWorkRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Problem", "Receiver", "Appointment Status", "Appointment Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(doctorWorkRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 108, 585, 153));

        refreshJBtn.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        refreshJBtn.setText("Refresh");
        refreshJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJBtnActionPerformed(evt);
            }
        });
        add(refreshJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(519, 70, -1, -1));

        assignJBtn.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        assignJBtn.setText("Assign to Me");
        assignJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJBtnActionPerformed(evt);
            }
        });
        add(assignJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 297, -1, -1));

        treatPatientJBtn.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        treatPatientJBtn.setText("Treat Patient");
        treatPatientJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treatPatientJBtnActionPerformed(evt);
            }
        });
        add(treatPatientJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 297, -1, -1));

        backBtn.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        backBtn.setText("<<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 357, -1, -1));

        headerJlbl.setFont(new java.awt.Font("Levenim MT", 1, 24)); // NOI18N
        headerJlbl.setForeground(new java.awt.Color(0, 204, 204));
        headerJlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerJlbl.setText("  Treat Patients Panel");
        add(headerJlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 11, 260, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void refreshJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJBtnActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshJBtnActionPerformed

    private void assignJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = doctorWorkRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row!");
            return;
        }
        WorkRequest request = (WorkRequest) doctorWorkRequestJTable.getValueAt(selectedRow, 1);
        
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populateTable();
    }//GEN-LAST:event_assignJBtnActionPerformed

    private void treatPatientJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treatPatientJBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = doctorWorkRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a patient!");
            return;
        } else {
            ScheduleAppointmentWorkRequest request = (ScheduleAppointmentWorkRequest) doctorWorkRequestJTable.getValueAt(selectedRow, 1);
            if (request.getReceiver() == null) {
                JOptionPane.showMessageDialog(this, "Please assign the patient to yourself!");
                return;
            } else if (request.getStatus().equals("Treatment Complete")) {
                JOptionPane.showMessageDialog(this, "Patient already treated!");
                return;
            } else {
                request.setStatus("Treatment in Progress");
                PatientTreatedJPanel ptjp = new PatientTreatedJPanel(userProcessContainer, request);
                userProcessContainer.add("PatientTreatedJPanel", ptjp);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
        }
    }//GEN-LAST:event_treatPatientJBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JTable doctorWorkRequestJTable;
    private javax.swing.JLabel headerJlbl;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJBtn;
    private javax.swing.JButton treatPatientJBtn;
    // End of variables declaration//GEN-END:variables
}
