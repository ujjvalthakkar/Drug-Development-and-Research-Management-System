/*
 * AdminWorkAreaJPanel.java
 *
 * Created on October 10, 2008, 8:50 AM
 */
package userinterface.supplierWorkArea;

import business.drug.Compound;
import business.enterprise.Enterprise;
import business.organization.Organization;
import business.supplier.Supplier;
import business.userAcoount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import business.organization.SupplierOrganization;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Harsh
 */
public class ViewCompoundListJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount account;
    private Organization organization;

    /**
     * Creates new form AdminWorkAreaJPanel
     */
    public ViewCompoundListJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.account = account;
        this.organization = organization;
        populateTable();
    }

    public void populateTable() {

        DefaultTableModel model = (DefaultTableModel) viewCompoundListJTable.getModel();

        model.setRowCount(0);

        if (organization instanceof SupplierOrganization) {
            for (Supplier s : organization.getSupplierDirectory().getSuppliersList()) {
                if (account.getEmployee().getName().equals(s.getName())) {
                    for (Compound c : s.getCompoundHistory().getCompoundList()) {
                        Object[] row = new Object[4];
                        row[0] = c;
                        row[1] = c.getQuantity();
                        row[2] = c.getCost();
                        row[3] = c.getQuantitySold();

                        model.addRow(row);
                    }

                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerJlbl = new javax.swing.JLabel();
        backJbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewCompoundListJTable = new javax.swing.JTable();
        panelChart = new javax.swing.JPanel();
        revenuesJBtn = new javax.swing.JButton();
        removeJBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerJlbl.setFont(new java.awt.Font("Levenim MT", 1, 24)); // NOI18N
        headerJlbl.setForeground(new java.awt.Color(0, 204, 204));
        headerJlbl.setText("               View Compound");
        add(headerJlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, 410, -1));

        backJbtn.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        backJbtn.setText("BACK");
        backJbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJbtnActionPerformed(evt);
            }
        });
        add(backJbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        viewCompoundListJTable.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        viewCompoundListJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "QtyAvailable", "Cost", "QuantitySold"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewCompoundListJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 650, 100));
        add(panelChart, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 1460, 520));

        revenuesJBtn.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        revenuesJBtn.setText("Revenues");
        revenuesJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revenuesJBtnActionPerformed(evt);
            }
        });
        add(revenuesJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 50, 90, -1));

        removeJBtn.setFont(new java.awt.Font("Levenim MT", 1, 12)); // NOI18N
        removeJBtn.setText("Remove");
        removeJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeJBtnActionPerformed(evt);
            }
        });
        add(removeJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 90, -1));
    }// </editor-fold>//GEN-END:initComponents


    private void backJbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJbtnActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJbtnActionPerformed

    private void revenuesJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revenuesJBtnActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        HashMap< Double, Object> hmap = new HashMap<>();
        JFreeChart barChart = null;
        if (organization instanceof SupplierOrganization) {
            for (Supplier s : organization.getSupplierDirectory().getSuppliersList()) {
                if (account.getEmployee().getName().equals(s.getName())) {
                    for (Compound c : s.getCompoundHistory().getCompoundList()) {
                        hmap.put(c.getQuantitySold() * c.getCost(), c.toString());
                    }

                }
            }
        }

        Set set = hmap.entrySet();
        Iterator iterator = set.iterator();

        while (iterator.hasNext()) {
            Map.Entry mentry = (Map.Entry) iterator.next();
            barChartData.setValue((Number) mentry.getKey(), "vital Signs", (String) mentry.getValue());
        }

        barChart = ChartFactory.createBarChart("Compound Summary", "Compound Name", "Revenue", barChartData, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot barChrt = barChart.getCategoryPlot();
        barChrt.setRangeGridlinePaint(Color.ORANGE);

        ChartPanel barPanel = new ChartPanel(barChart);
        panelChart.removeAll();
        panelChart.add(barPanel, BorderLayout.CENTER);
        panelChart.repaint();
        panelChart.validate();
    }//GEN-LAST:event_revenuesJBtnActionPerformed

    private void removeJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJBtnActionPerformed
        // TODO add your handling code here:

        try {
            int selectedRow = viewCompoundListJTable.getSelectedRow();
            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(this, "Please select a row!!");
                return;
            } else {
                Compound c = (Compound) viewCompoundListJTable.getValueAt(selectedRow, 0);
                if (organization instanceof SupplierOrganization) {
                    for (Supplier s : organization.getSupplierDirectory().getSuppliersList()) {
                        if (account.getEmployee().getName().equals(s.getName())) {
                            for (Compound d : s.getCompoundHistory().getCompoundList()) {
                                if (c.getName().equals(d.getName())) {
                                    s.getCompoundHistory().removeCompound(c);
                                    populateTable();
                                    break;
                                }
                            }
                        }
                    }
                }
            }
        } catch (ConcurrentModificationException concurrentModificationException) {

        }
    }//GEN-LAST:event_removeJBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJbtn;
    private javax.swing.JLabel headerJlbl;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelChart;
    private javax.swing.JButton removeJBtn;
    private javax.swing.JButton revenuesJBtn;
    private javax.swing.JTable viewCompoundListJTable;
    // End of variables declaration//GEN-END:variables

}
